ASSIGNEMENT DAY-07
  


QUESTION-01
Write a program to implement Circular Queue
# include<iostream.h>
# incelude<conio.h>
# include<process.h>
# define MAX 5
int cq[5];
int front=-1;
int rear=-1;
void cqinsert();
void cqdelete();
void cqdisplay();
void main()
{
 int ch;
 clrscr();
 while(1)
 {
   printf("\n 1.cqinsert");
   printf("\n 2.cqdelete");
   printf("\n 3.cqdisplay");
   printf("\n 4.exit");
   printf("\n Enter your choice");
   scanf("%d",&ch);
   switch(ch)
   {
     case-1:cqinsert();break;
     case-2:cqdelete():break;
     case-3:cqdisplay();break;
     case-4:exit(0);
     deafult:printf("\n invalid choice");
   }
 }
}
void cqinsert()
{
  int ele;
  if(((front==0)&&(rear==MAX-1))||(rear==front-1))
    printf("\n cqueue is full");
  else
  {
   printf("\n enter element to insert:");
   scanf("%d",&ele);
   if(rear==MAX-1)
    rear=0;
   else
   if(rear==-1)
   {
     front=0;
     rear=0;
   }
   else
    rear++;
    cq[rear]=ele;
  }
}
void cqdelete()
{
 if(front==-1)
  printf("\n circular queue is empty");
 else
 {
  printf("\n deleted element=%d",cq[front]);
  if(front==rear)
  {
   front=-1;
   rear=-1;
  }
  else
  if(front==MAX-1)
        front=0;
  else 
       front++;
 }
}
void cqdisplay()
{
 int i;
 if(front==-1)
    printf("\n circular queue is empty");
 else
 {
  printf("\n front->")
  if(front<=rear)
  {
    for(i=front;i<=rear;i++)
      printf("%d",cq[i]);
  }
  else
  { 
    for(i=front;i<=MAX-1;i++)
     printf("%d",cq[i]);
    for(i=0;i<=rear;i++)
     printf("%d",cq[i]);
  }
  printf("<-rear");
 }
}